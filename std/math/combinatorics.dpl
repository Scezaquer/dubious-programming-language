#include <../exception.dpl>

fn factorial(n: int): int {
	if (n < 0) {
		exception("Factorial of negative number", 1);
	}

	if (n == 0 || n == 1) {
		return 1;
	}

	let result: int = 1;
	let i: int;
	for (i = 2; i <= n; i += 1) {
		result *= i;
	}
	return result;
}

fn binomial(n: int, k: int): int {
	if (k < 0 || k > n) {
		exception("Invalid binomial coefficient parameters", 1);
	}

	if (k == 0 || k == n) {
		return 1;
	}

	let result: int = 1;
	let i: int;
	for (i = 1; i <= k; i += 1) {
		result *= (n - i + 1);
		result /= i;
	}
	return result;
}