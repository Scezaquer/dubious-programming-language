#namespace test

const c: int = 5;

fn return_2(): int {
	return 2;
}

struct S {
	first_attribute: int;
	second_attribute: char;
}


////////////////////////////
#namespace sub_test

const c: int = 36;

fn return_2(): int {
	return -2;
}

struct S {
	first_element: int;
	second_attribute: char;
}


enum E {
	HIGH,
	LOW,
	MEDIUM
}

#spacename
///////////////////////////////

enum E {
	LOW,
	MEDIUM,
	HIGH
}

#spacename


fn main(): int {
	let a: test::S = test::S{ 1, 'a' };
	let b: test::sub_test::S = test::sub_test::S{ 3, 'c' };

	a.first_attribute += b.first_element;	// 4
	b.second_attribute = ((a.second_attribute : int) + a.first_attribute) : char; // e

	let tmp: int = test::c + test::sub_test::c;	// 41
	tmp += (test::sub_test::E.MEDIUM : int) - (test::E.LOW : int); // 43

	return a.first_attribute + (b.second_attribute : int) - tmp; // 62
}